// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package catalyst

import (
	"encoding/json"
	"errors"

	"gitlab.waterfall.network/waterfall/protocol/gwat/common"
	"gitlab.waterfall.network/waterfall/protocol/gwat/common/hexutil"
)

var _ = (*assembleBlockParamsMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (a assembleBlockParams) MarshalJSON() ([]byte, error) {
	type assembleBlockParams struct {
		ParentHashes []common.Hash  `json:"parentHashes"    gencodec:"required"`
		Timestamp    hexutil.Uint64 `json:"timestamp"     gencodec:"required"`
	}
	var enc assembleBlockParams
	enc.ParentHashes = a.ParentHashes
	enc.Timestamp = hexutil.Uint64(a.Timestamp)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *assembleBlockParams) UnmarshalJSON(input []byte) error {
	type assembleBlockParams struct {
		ParentHashes *[]common.Hash  `json:"parentHashes"    gencodec:"required"`
		Timestamp    *hexutil.Uint64 `json:"timestamp"     gencodec:"required"`
	}
	var dec assembleBlockParams
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.ParentHashes == nil {
		return errors.New("missing required field 'parentHashes' for assembleBlockParams")
	}
	a.ParentHashes = *dec.ParentHashes
	if dec.Timestamp == nil {
		return errors.New("missing required field 'timestamp' for assembleBlockParams")
	}
	a.Timestamp = uint64(*dec.Timestamp)
	return nil
}
