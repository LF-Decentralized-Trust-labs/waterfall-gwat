image: golang:1.17.2-stretch
before_script:
  - echo "machine $CI_SERVER_HOST login gitlab-ci-token password $CI_JOB_TOKEN" >> ~/.netrc
  - export GOPRIVATE=${CI_SERVER_HOST}
stages:
  - build
  - release


.job_build:
  script: &job_build |-
    cp -r params/version.go /tmp/version.go
    sed -i "s/\\\u2692/${CI_COMMIT_SHORT_SHA}/g" params/version.go
    go run build/ci.go install ./cmd/geth ./cmd/bootnode
    mkdir -p ./dist
    cp ./build/bin/bootnode ./dist/gwat-bootnode
    cp ./build/bin/geth ./dist/gwat
    cp -r /tmp/version.go params/version.go


build branch:
  stage: build
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_TAG == null
      when: on_success
  script: *job_build
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - dist/gwat-bootnode
      - dist/gwat

build latest:
  stage: build
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      when: on_success
  script: *job_build
  artifacts:
    name: "$CI_PROJECT_NAME-latest"
    paths:
      - dist/gwat-bootnode
      - dist/gwat

release tag:
  stage: build
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_TAG != null
      when: on_success
  script: *job_build
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_BUILD_TAG"
    paths:
      - dist/gwat-bootnode
      - dist/gwat


