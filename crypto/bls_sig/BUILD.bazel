load("@io_bazel_rules_go//go:def.bzl", "go_test")
load("@bazel_skylib//lib:selects.bzl", "selects")
load("@prysm//tools/go:def.bzl", "go_library")

#  Build with --define=blst_disabled=true to exclude blst library.
config_setting(
    name = "linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "darwin_amd64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:x86_64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "darwin_arm64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:arm64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "windows_amd64",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:x86_64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "linux_arm64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "android_amd64",
    constraint_values = [
        "@platforms//os:android",
        "@platforms//cpu:x86_64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

config_setting(
    name = "android_arm64",
    constraint_values = [
        "@platforms//os:android",
        "@platforms//cpu:aarch64",
    ],
    values = {
        "define": "blst_disabled=false",
    },
)

# gazelle:resolve go github.com/supranational/blst/bindings/go @com_github_supranational_blst//:go_default_library

go_library(
    name = "go_default_library",
    srcs =
        selects.with_or({
            (
                ":linux_amd64",
                ":linux_arm64",
                ":darwin_amd64",
                ":darwin_arm64",
                ":windows_amd64",
                ":android_amd64",
                ":android_arm64",
            ): [
                "aliases.go",
                "public_key.go",
                "signature.go",
            ],
            "//conditions:default": [
                "stub.go",
            ],
        }),
    importpath = "gitlab.waterfall.network/waterfall/protocol/gwat/crypto/bls_sig",
    visibility = ["//visibility:public"],
    deps = selects.with_or({
        (
            ":linux_amd64",
            ":linux_arm64",
            ":darwin_amd64",
            ":darwin_arm64",
            ":windows_amd64",
            ":android_amd64",
            ":android_arm64",
        ): [
            "//common:go_default_library",
            "@com_github_dgraph_io_ristretto//:go_default_library",
            "@com_github_pkg_errors//:go_default_library",
            "@com_github_supranational_blst//:go_default_library",
        ],
        "//conditions:default": ["//crypto/bls/common:go_default_library"],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "public_key_test.go",
        "signature_test.go",
    ],
    deps = select({
        "@io_bazel_rules_go//go/platform:android_amd64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:android_arm64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin_arm64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:ios_amd64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:ios_arm64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux_arm64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            ":go_default_library",
            "//common:go_default_library",
            "@com_github_stretchr_testify//require:go_default_library",
            "@tools_gotest//assert:go_default_library",
        ],
        "//conditions:default": [],
    }),
)
